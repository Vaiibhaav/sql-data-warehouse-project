CREATE OR ALTER PROCEDURE bronze.load_bronze AS
	DECLARE @st_time DATETIME,@ed_time DATETIME;
	BEGIN
		SET  @st_time = GETDATE();
		DECLARE @start_time DATETIME,@end_time DATETIME;
		BEGIN TRY
			PRINT '************************************************'
			PRINT 'LOADING DATA INTO GOLD'
			PRINT '************************************************'

			PRINT '************************************************'
			PRINT 'LOADING INTO CRM''s TABLE' 
			PRINT '************************************************'

			SET @start_time  = GETDATE();
			PRINT '>> wokring on crm_cust_info'
			TRUNCATE TABLE bronze.crm_cust_info;
			BULK INSERT bronze.crm_cust_info
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.crm_cust_info
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ; 
			PRINT '************************************'
			SET @start_time  = GETDATE();
			TRUNCATE TABLE bronze.crm_prd_info
			BULK INSERT bronze.crm_prd_info
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.crm_prd_info
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ;
			PRINT '************************************'
			SET @start_time  = GETDATE();
			TRUNCATE TABLE bronze.crm_sales_details
			BULK INSERT bronze.crm_sales_details
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.crm_sales_details
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ; 
			PRINT '************************************************'
			PRINT 'LOADING INTO ERP''s TABLE' 
			PRINT '************************************************'

			SET @start_time  = GETDATE();
			TRUNCATE TABLE bronze.erp_cust_az12
			BULK INSERT bronze.erp_cust_az12
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\CUST_AZ12.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.erp_cust_az12
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ; 
			PRINT '************************************'
			SET @start_time  = GETDATE();
			TRUNCATE TABLE bronze.erp_loc_a101
			BULK INSERT bronze.erp_loc_a101
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\LOC_A101.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.erp_loc_a101
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ; 
			PRINT '************************************'
			SET @start_time  = GETDATE();
			TRUNCATE TABLE bronze.erp_px_cat_g1v2
			BULK INSERT bronze.erp_px_cat_g1v2
			FROM 'D:\coding\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\PX_CAT_G1V2.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK 
			);
			SELECT COUNT(*) FROM bronze.erp_px_cat_g1v2
			SET @end_time  = GETDATE();
			PRINT 'Loading Time' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds' ;
			PRINT '************************************'
		END TRY
		BEGIN CATCH
			PRINT '************************************'
			PRINT 'Error Message' + ERROR_MESSAGE();
			PRINT 'Error Message' + CAST(ERROR_NUMBER() AS NVARCHAR);
			PRINT 'Error Message' + CAST(ERROR_STATE() AS NVARCHAR);
			PRINT '************************************'
		END CATCH
		SET @ed_time = GETDATE();
		PRINT 'Bronze Layer Loading Time' + CAST(DATEDIFF(second,@st_time,@ed_time) AS NVARCHAR) + 'seconds' ;
	END
